apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: root-filesystem-is-readonly
  annotations:
    policies.kyverno.io/title: Root filesystem is readonly
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      This policy validates that containers define a securityContext
      with `readOnlyRootFilesystem: true`. If filesystem is writeable, 
      container process can manipulate with filesystem, modify and 
      delete important files - eg. configuration 
spec:
  # Specifies action done when validation fails
  # Allowed values: 'audit' (report but allow) | 'enforce' (don't allow to create invalid resource)
  validationFailureAction: enforce
  # Specifies if policy applies also on already existing resources
  # If set to true, then violations are reported (but existing resources are not blocked - 'audit' semantics)
  background: true
  rules:
    - name: root-filesystem-is-readonly-rule
      match:
        resources:
          kinds:
            - Pod
          namespaces:
          - <<namespace>>
      validate:
        message: "Root filesystem must be read-only."
        pattern:
          spec:
            containers:
              - securityContext:
                  readOnlyRootFilesystem: true
